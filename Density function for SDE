% compute pdf of fpe corr to Levy noise with absorbing BC in a bounded, symmetric domain (-r,r); 
%The code from Gao's paper, please refer it: Gao T, Duan J, Li X. 2016 Fokker-Planck equations for stochastic dynamical systems with sym-
metric L´evy motions. Appl. Math. Comput. 278, 1–20.
% We consider the SDE dXt=f(xt)dt+ddBt+epsdLt  with (0 0 va)

%  function [U]=tgao7_Dwell_true(alpha,eps,s)
clc;
clear;
tic;
alpha=1.5;
eps=0.1; 
a1 =0;  b1 =1; 
T = 50; 
rx = 0.83;   

format long




d = 0;   % 
d = d^2*4/(b1-a1)^2;    % d^2 


h_p= 80;  
r_m=0.3; 
K=0.9;  
m_A=0.15; 
h_A=0.1;
m_f=0.11;  
h_f=0.64; 

P= 2000; 

a=4; b=6; r=6; FRI=7; h_c=0.57; h_SMI=1800; h_I=0.15;
SMI=(h_SMI)^a/((h_SMI)^a+P^a); 
f=@(x) ((P/(h_p+P))*r_m*(x-x.^2/K)-m_A.*(h_A.*x./(x+h_A))-x.*(1/FRI).*((((h_c)^b./((h_c)^b+x.^b))*SMI).^r)./((h_I)^r+(((h_c)^b./((h_c)^b+x.^b)).*SMI).^r))*2/(b1-a1);

rr=1;             %right
rl=1;             %left
h=0.01;          
J=rr/h;             %right  
L=rl/h;             %left   
dt = 0.5*h^2;
dtdx = dt/h;
nft=round(T/dt);
 XX = a1:(b1-a1)/2*h :b1;  
fpmax=max(f(XX)); % maximum of f in [a, b]      

 Jt=L+J-1;     
x=-(rl+rr):h:(rl+rr);    %  ???x=(-2,2)  ,(-1,1)?????????  X
C=-zeta(alpha-1)*h^(2-alpha);          % correction term u''(x)   % Ch????????????
cons=alpha*gamma((1+alpha)/2)/(2^(1-alpha)*sqrt(pi)*gamma(1-alpha/2));   % ??????C??
% coeff for the diffusion and the correction term
Chh=( d/2 + cons*C*eps^(alpha)*(2/(b1-a1))^alpha )/h^2;    
c1=eps^(alpha)*(2/(b1-a1))^alpha*cons/alpha;   %% ??????
c2=eps^(alpha)*(2/(b1-a1))^alpha*cons*h;      %%  ??????

b=zeros(Jt,1);  
a=zeros(Jt,1);
c=zeros(Jt,1); 

%  nonintegral part


% %nonintegral part/absorbing  Ch(P_(j-1)-2P_(j)+P_(j+1))/h^2; Chh=Ch/h^2;
% coefficient of U_j
b(2:Jt-1) = (-2*Chh- c1*(1./(x(J+3:2*J+L-1)+rl).^alpha+1./(rr-x(J+3:2*J+L-1)).^alpha))';   
% one-sided diff near boundaries  
b(1)  =2*Chh- c1*(1/(rl+x(J+2))^alpha+1/(rr-x(J+2))^alpha);                          
b(Jt) = 2*Chh- c1*(1/(rl+x(2*J+L))^alpha+1/(rr-x(2*J+L))^alpha); % one-sided diff   

a= Chh*ones(Jt,1);  % coefficient of U_(j-1)   %% (ch/h^2)*P_(j-1) ?????????chh
c= Chh*ones(Jt,1);  % coefficient of U_(j+1)   %% (ch/h^2)*P_(j+1) ?????????chh
c(1)  = -5*Chh; % one-sided diff
a(Jt) = -5*Chh; % one-sided diff
vp2 = zeros(Jt,1); vp2(3) = 4*Chh;  % one-sided diff
vp3 = zeros(Jt,1); vp3(4) =  -Chh; % one-sided diff 
vm2 = zeros(Jt,1); vm2(Jt-2) = 4*Chh;  % one-sided diff
vm3 = zeros(Jt,1); vm3(Jt-3) =  -Chh; % one-sided diff 

%only brownian motion
% b(1)  = -2*Chh - c1*(1/(rl+x(J+2))^alpha(m)+1/(rr-x(J+2))^alpha(m)); 
% b(Jt) = -2*Chh - c1*(1/(rl+x(2*J+L))^alpha(m)+1/(rr-x(2*J+L))^alpha(m)); % one-sided diff
% a = Chh*ones(Jt,1);  % coefficient of U_(j-1)
% c = Chh*ones(Jt,1);  % coefficient of U_(j+1) 
% vp2 = zeros(Jt,1); % one-sided diff
% vp3 = zeros(Jt,1); % one-sided diff 
% vm2 = zeros(Jt,1); % one-sided diff
% vm3 = zeros(Jt,1); % one-sided diff 

% integral part  
for j=-L+1:J-1
   b(j+L)= b(j+L) - c2*( sum(1./abs(x(J+2-j:L+J)).^(1+alpha)) ...
                       + sum(1./abs(x(L+J+2:2*J+L-j)).^(1+alpha)) ...
         + .5/abs(x(J+1-j))^(1+alpha) + .5/abs(x(2*J+L+1-j))^(1+alpha) );  
end 
A=spdiags([vm3 vm2 [a(2:end); 0] b ...
           [0; c(1:end-1)] vp2 vp3],-3:3,Jt,Jt);

% coefficient of u_(j+k) 
B=zeros(size(A));   % B=A=99??99
for j=-L+1:J-1
  B(L+j,:)=[1./abs(x(J+2-j:L+J)).^(1+alpha)  0  1./abs(x(L+J+2:2*J+L-j)).^(1+alpha)];     % ????????????0
end

X=-rl:h:rr;   %?????????(-1,1)  X


UU=sqrt(40/pi)*exp(-(XX - rx).^2 *40);  % gaussian'
U=UU(2:end-1)';
Un=U; U1=U; U2=U;
%U=UU(2:end-1);


%figure
%hold on
nu = length(U);  
data = zeros(nu+4,1);   


for nt=1:nft-1

    U1 = U + dt*(A+c2*B)*U;              % du/dt = R(Un) = (A+c2*B)*U    
    % global Lax-Friedrichs(LF) flux splitting    
    data(3:nu+2) = (f(XX(2:end-1)) + fpmax)'.*U/2;    % ???fp???+
    fx1 = derWENOr2_minus(data,h);
    data(3:nu+2) = (f(XX(2:end-1)) - fpmax)'.*U/2;     % ???fp???-
    fx2 = derWENOr2_plus(data,h);
    U1 = U1 - dtdx*(fx1+fx2);
    
    U2 = 0.75*U + U1/4 + (dt/4)*(A+c2*B)*U1;
    data(3:nu+2) = (f(XX(2:end-1)) + fpmax)'.*U1/2;
    fx1 = derWENOr2_minus(data,h);
    data(3:nu+2) = (f(XX(2:end-1)) - fpmax)'.*U1/2;
    fx2 = derWENOr2_plus(data,h);
    U2 = U2 - (dtdx/4)*(fx1+fx2);
    
    Un = U/3 + 2*U2/3 + (2*dt/3)*(A+c2*B)*U2;
    data(3:nu+2) = (f(XX(2:end-1)) + fpmax)'.*U2/2;             
    fx1 = derWENOr2_minus(data,h);
    data(3:nu+2) = (f(XX(2:end-1)) - fpmax)'.*U2/2;
    fx2 = derWENOr2_plus(data,h);
    Un = Un - (2*dtdx/3)*(fx1+fx2);   
            
     U=Un;
     %t=nt*dt;
     
      XU(:,nt) = U;     
         
end
t = dt : dt : (nft-1)*dt;


 plot(XX',[0;XU(:,end)／sum(XU(:,end)*(b1-a1)/2*h);0])   
xlabel('Tree cover fraction');  ylabel('Density');






toc;
